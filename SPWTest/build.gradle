buildscript {
	repositories {
		mavenCentral()
		jcenter()
	}

	dependencies {
		classpath group: 'com.google.appengine', name: 'gradle-appengine-plugin', version: gaeVer
		classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
	}
}

repositories{
	mavenCentral()
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'appengine'
apply plugin: 'gwt'

classes.dependsOn 'gwttestservicesClasses'

sourceSets {
	gwttestservices{
		java{
			srcDir "../google-web-toolkit/user/test"
			include '**/safehtml/shared/GwtSafeHtmlBuilderTest.java'
			include '**/safehtml/shared/GwtSafeHtmlStringTest.java'
			include '**/client/rpc/*.java'
			include 'com/google/gwt/user/RPCSuite.gwt.xml'
			include '**/server/rpc/*ServerCustomFieldSerializer.java'
			include '**/server/rpc/*ServiceImpl.java'
			include '**/server/rpc/*TestServiceImpl*.java'
			include '**/server/rpc/LogFilterServletContext.java'
			include '**/server/rpc/RpcTokenAwareRemoteService.java'
			
			include '**/i18n/client/CustomPluralsTest.java'
			include '**/junit/client/GWTTestCaseStackTraceTest.java'
			include '**/junit/client/GWTTestCaseTest*.java'
			include '**/resources/client/CSSResourceTest.java'
			include '**/validation/client/ValidationClientGwtTestCase.java'
			include '**/validation/client/constraints/PatternValidatorGwtTest.java'
			include '**/junit/client/*ExceptionAsserter.java'
			include '**/junit/client/ExpectedFailure.java'
			include '**/resources/client/Custom*Resource.java'
			include '**/resources/client/NestedBundleTest.java'
			include '**/resources/client/gss/ImportResource.java'
			include '**/resources/client/impl/*.java'
			include '**/resources/rg/Custom*ResourceGenerator.java'
		}
	}
	main{
		java{
			srcDir 'src/main/java'
			include '**/com/gdevelop/**'
		}
		compileClasspath += gwttestservices.output
	}
}

task gwttestservicesJar(type: Jar){
	baseName = 'GWTTestServices'
	from sourceSets.gwttestservices.output
}

sourceCompatibility = 1.7

war.dependsOn gwttestservicesJar

dependencies {
	compile group: 'com.google.gwt', name: 'gwt-user', version: gwtVer
	compile group: 'com.google.gwt', name: 'gwt-dev', version: gwtVer
	compile files('build/libs/GWTTestServices.jar')

	gwttestservicesCompile group: 'com.google.gwt', name: 'gwt-user', version: gwtVer
	gwttestservicesCompile group: 'com.google.gwt', name: 'gwt-dev', version: gwtVer
	gwttestservicesCompile 'junit:junit:4.11'

	compile group: 'com.google.appengine', name: 'appengine-api-1.0-sdk', version: gaeVer
	compile 'com.google.api-client:google-api-client-servlet:1.20.0'
	compile 'com.google.api-client:google-api-client-gson:1.20.0'
	appengineSdk "com.google.appengine:appengine-java-sdk:$gaeVer"

	compile 'junit:junit:4.11'
	testCompile group: 'com.google.appengine', name: 'appengine-testing', version: gaeVer
	testCompile group: 'com.google.appengine', name: 'appengine-api-labs', version: gaeVer
	testCompile group: 'com.google.appengine', name: 'appengine-api-stubs', version: gaeVer
}

gwt{
	//gwtVersion='2.7.0' // Including this seems to remove -user and -dev, along with several app engine dependencies from the gradle listing in Eclipse
	modules 'com.gdevelop.gwt.syncrpc.spawebtest.SPAWebTest'
	devModules 'com.gdevelop.gwt.syncrpc.spawebtest.SPAWebTest'
	logLevel = 'INFO'
	src += files(sourceSets.gwttestservices.allJava.srcDirs)
}
configurations{
	gwttestservices
}
appengine {
	downloadSdk = true
	jvmFlags = ['-Xdebug', '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8000']
	httpPort = 8888
	httpAddress = '192.168.1.107'
	appcfg{
		oauth2 = true
	}
}

war{
	classpath configurations.gwttestservices
}

/*****************GWT API Jar to Local Maven Repo*********/
apply plugin: 'maven-publish' 

task clientTestsJar(type: Jar){
	baseName = 'clientTests'
	from sourceSets.test.output
	include '**/GreetingServiceTest*'
	include '**/LargePayloadTest*'
}

task clientTestsSourcesJar(type: Jar, dependsOn:testClasses){
	from sourceSets.test.output
	include '**/GreetingServiceTest*'
	include '**/LargePayloadTest*'
}

task clientApiJar(type: Jar){
	baseName = 'clientApi'
	from sourceSets.main.output
	include '**/client/**'
	include '**/shared/**'
	exclude '**/SPAWebTest*'
}

task clientApiSourcesJar(type: Jar, dependsOn:classes) {
    from sourceSets.main.output
	include '**/client/**'
	include '**/shared/**'
	exclude '**/SPAWebTest*'
}

task clientApiJavadoc(type: Javadoc){
	source = sourceSets.main.allJava
	include '**/client/**'
	include '**/shared/**'
	destinationDir new File(rootProject.buildDir,'apiJavaDoc')
	destinationDir.mkdirs()
}

task clientApiJavadocJar(type: Jar, dependsOn:clientApiJavadoc) {
    classifier = 'javadoc'
    from clientApiJavadoc.destinationDir
}

publishing{
	publications{
		spwebClientApi(MavenPublication){
			groupId 'com.gdevelop.gwt.syncrpc'
			artifactId 'spweb-client-api'
			version gspVer
			
			artifact clientApiJar
			artifact clientApiSourcesJar{
				classifier "sources"
			}
			//artifact clientApiJavadocJar{
			//	classifier 'javadoc'
			//}
		}
		spwebClientTests(MavenPublication){
			groupId 'com.gdevelop.gwt.syncrpc'
			artifactId 'spweb-client-tests'
			version gspVer
			
			artifact clientTestsJar
			artifact clientTestsSourcesJar{
				classifier "sources"
			}
		}
	}
}
